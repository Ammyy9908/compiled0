apiVersion: apps/v1
kind: Deployment
metadata:
  name: request-service
  labels:
    app: request-service
spec:
  replicas: 2  # Adjust the number of replicas based on your needs
  selector:
    matchLabels:
      app: request-service
  template:
    metadata:
      labels:
        app: request-service
    spec:
      containers:
        - name: request-service
          image: ammyy9908/request-service:latest  # Replace with your actual image name
          ports:
            - containerPort: 8080
          env:
            - name: LOG_PATH
              value: "/var/log/"  # Environment variable as per Dockerfile
            - name: BOOT_CUR_ENV
              value: "production"  # Set the environment or replace with dynamic environment
          volumeMounts:
            - name: log-volume
              mountPath: /var/log/  # Mount the log volume inside the container
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
            requests:
              memory: "128Mi"
              cpu: "100m"
      volumes:
        - name: log-volume
          emptyDir: {}  # Creates an ephemeral volume that gets wiped when the pod is deleted
---
apiVersion: v1
kind: Service
metadata:
  name: request-service
spec:
  selector:
    app: request-service
  ports:
    - port: 80
      targetPort: 8080  # The port inside the container
  type: ClusterIP  # Internal cluster service
